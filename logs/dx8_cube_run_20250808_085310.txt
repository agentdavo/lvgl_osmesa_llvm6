Starting dx8_cube...
Initializing LVGL platform with X11...
Creating X11 window: 1024x768
X11 window created successfully
LVGL platform initialized successfully
Initializing Direct3D...
[INFO ] dx8gl.cpp:152 in dx8gl_init(): Selected OSMesa backend from environment
[INFO ] render_backend.cpp:13 in create_render_backend(): Creating OSMesa rendering backend
[INFO ] osmesa_backend.cpp:30 in initialize(): Initializing OSMesa backend 800x600
[INFO ] osmesa_backend.cpp:33 in initialize(): Attempting to create OpenGL 4.5 Core context with OSMesaCreateContextAttribs
[INFO ] osmesa_backend.cpp:101 in initialize(): OSMesa version: 11.2.0
[INFO ] osmesa_backend.cpp:102 in initialize(): OSMesa context: 800x600 (max: 16384x16384)
[INFO ] osmesa_backend.cpp:103 in initialize(): Actual OpenGL context: version 4.5, profile mask=0x1
[INFO ] osmesa_backend.cpp:111 in initialize(): === OSMesa Backend OpenGL Capabilities ===
[INFO ] osmesa_backend.cpp:112 in initialize(): OpenGL vendor: Mesa
[INFO ] osmesa_backend.cpp:113 in initialize(): OpenGL renderer: llvmpipe (LLVM 20.1.8, 256 bits)
[INFO ] osmesa_backend.cpp:114 in initialize(): OpenGL version: 4.5 (Core Profile) Mesa 25.0.7 (git-742a20f48c)
[INFO ] osmesa_backend.cpp:115 in initialize(): GLSL version: 4.50
[INFO ] osmesa_backend.cpp:118 in initialize(): Initializing OpenGL function pointers via OSMesaGetProcAddress
[INFO ] osmesa_gl_loader.cpp:58 in InitializeOSMesaGL(): Initializing OSMesa GL function pointers
[INFO ] osmesa_gl_loader.cpp:119 in InitializeOSMesaGL(): Successfully loaded all OSMesa GL function pointers
[INFO ] dx8gl.cpp:204 in dx8gl_init(): dx8gl initialized
[INFO ] dx8gl.cpp:81 in Direct3DCreate8_CPP(): Direct3DCreate8 called with SDK version 120
[INFO ] d3d8_interface.cpp:44 in initialize(): Initializing Direct3D8 interface
[INFO ] d3d8_interface.cpp:46 in initialize(): Using OSMesa-only software rendering (no EGL complexity)
[INFO ] d3d8_interface.cpp:579 in enumerate_adapters(): Enumerating adapters for OSMesa mode
[INFO ] d3d8_interface.cpp:580 in enumerate_adapters():   - OSMesa provides software rendering via llvmpipe
[INFO ] d3d8_interface.cpp:581 in enumerate_adapters():   - Simulating 1 adapter (no actual hardware enumeration)
[INFO ] d3d8_interface.cpp:582 in enumerate_adapters():   - Adapter 0: OSMesa Software Renderer
[INFO ] d3d8_interface.cpp:583 in enumerate_adapters():   - Vendor: Mesa/llvmpipe (fake ATI VendorId 0x1002)
[INFO ] d3d8_interface.cpp:584 in enumerate_adapters():   - Device: Software Rasterizer (fake Radeon 7500 DeviceId 0x5159)
[INFO ] d3d8_interface.cpp:590 in enumerate_adapters(): OSMesa adapter enumeration complete - 1 software adapter available
[INFO ] dx8gl.cpp:90 in Direct3DCreate8_CPP(): Created IDirect3D8 interface at 0x653d2a29fb10
[INFO ] d3d8_interface.cpp:522 in CreateDevice(): CreateDevice() called with parameters:
[INFO ] d3d8_interface.cpp:523 in CreateDevice():   Adapter: 0 (OSMesa software adapter)
[INFO ] d3d8_interface.cpp:524 in CreateDevice():   DeviceType: HAL
[INFO ] d3d8_interface.cpp:525 in CreateDevice():   Focus Window: (nil)
[INFO ] d3d8_interface.cpp:526 in CreateDevice():   Behavior Flags: 0x00000020
[INFO ] d3d8_interface.cpp:528 in CreateDevice():     - SOFTWARE_VERTEXPROCESSING
[INFO ] d3d8_interface.cpp:542 in CreateDevice():   Present Parameters:
[INFO ] d3d8_interface.cpp:543 in CreateDevice():     BackBuffer Size: 400x400
[INFO ] d3d8_interface.cpp:546 in CreateDevice():     BackBuffer Format: 0x00000016
[INFO ] d3d8_interface.cpp:547 in CreateDevice():     BackBuffer Count: 0
[INFO ] d3d8_interface.cpp:548 in CreateDevice():     MultiSample Type: 0
[INFO ] d3d8_interface.cpp:549 in CreateDevice():     SwapEffect: 1
[INFO ] d3d8_interface.cpp:550 in CreateDevice():     Windowed: Yes
[INFO ] d3d8_interface.cpp:551 in CreateDevice():     EnableAutoDepthStencil: Yes
[INFO ] d3d8_interface.cpp:553 in CreateDevice():     AutoDepthStencilFormat: 0x0000004B
[INFO ] d3d8_interface.cpp:555 in CreateDevice():     FullScreen_RefreshRateInHz: 0
[INFO ] d3d8_interface.cpp:556 in CreateDevice():     FullScreen_PresentationInterval: 0x00000000
[INFO ] d3d8_interface.cpp:559 in CreateDevice(): Creating Direct3DDevice8 instance...
[INFO ] thread_pool.cpp:24 in ThreadPool(): Creating thread pool with 8 threads
[INFO ] d3d8_device.cpp:118 in Direct3DDevice8(): Direct3DDevice8 created: adapter=0, type=1, flags=0x00000020
[INFO ] d3d8_interface.cpp:562 in CreateDevice(): Direct3DDevice8 instance created at 0x653d2a1f8d10
[INFO ] d3d8_interface.cpp:564 in CreateDevice(): Initializing Direct3DDevice8...
[INFO ] d3d8_device.cpp:224 in initialize(): Initializing Direct3DDevice8
[INFO ] osmesa_backend.cpp:182 in resize(): Resizing OSMesa backend from 800x600 to 400x400
[INFO ] d3d8_device.cpp:254 in initialize(): OSMesa backend initialized successfully
[INFO ] d3d8_device.cpp:267 in initialize(): Actual OpenGL version: 4.5 (Core Profile) Mesa 25.0.7 (git-742a20f48c)
[INFO ] d3d8_device.cpp:274 in initialize(): Using OpenGL 4.5 Core Profile - VAO required
[INFO ] state_manager.cpp:41 in initialize(): Initializing state manager
[INFO ] state_manager.cpp:519 in apply_render_states(): Applying render states, z_enable=1
[INFO ] state_manager.cpp:529 in apply_render_states(): Enabled GL_DEPTH_TEST (was disabled)
[INFO ] state_manager.cpp:583 in apply_render_states(): GL_CULL_FACE already in correct state: enabled
[INFO ] d3d8_device.cpp:184 in set_default_global_render_states(): Setting default global render states
[INFO ] d3d8_device.cpp:220 in set_default_global_render_states(): Default global render states set
[INFO ] vertex_shader_manager.cpp:28 in initialize(): Initializing vertex shader manager
[INFO ] pixel_shader_manager.cpp:26 in initialize(): Initializing pixel shader manager
[INFO ] thread_pool.cpp:24 in ThreadPool(): Creating thread pool with 2 threads
[INFO ] shader_binary_cache.cpp:67 in ShaderBinaryCache(): Created thread pool with 2 threads for async disk operations
[INFO ] shader_binary_cache.cpp:87 in initialize(): Initializing shader binary cache
[INFO ] shader_binary_cache.cpp:39 in check_binary_format_support(): OpenGL 4.5 supports program binary (GL 4.1+)
[INFO ] shader_binary_cache.cpp:107 in initialize(): Shader binary cache initialized (memory: enabled, disk: enabled)
[INFO ] shader_program_manager.cpp:47 in initialize(): ShaderProgramManager: Initialized shader binary cache with async disk I/O
[INFO ] shader_program_manager.cpp:53 in initialize(): ShaderProgramManager initialized
[INFO ] render_thread.cpp:61 in initialize(): RenderThread initialized successfully
[INFO ] render_thread.cpp:152 in render_thread_func(): Render thread started
[INFO ] d3d8_device.cpp:367 in initialize(): Direct3DDevice8 initialized successfully
[INFO ] d3d8_interface.cpp:570 in CreateDevice(): Direct3DDevice8 initialization successful
[INFO ] d3d8_interface.cpp:573 in CreateDevice(): CreateDevice() successful - returning IDirect3DDevice8 at 0x653d2a1f8d10
[INFO ] state_manager.cpp:198 in set_render_state(): Setting D3DRS_ZENABLE to 1
[INFO ] state_manager.cpp:220 in set_render_state(): Setting D3DRS_CULLMODE to 3
[INFO ] d3d8_device.cpp:1551 in CreateVertexBuffer(): CreateVertexBuffer: length=672, usage=0x00000008, fvf=0x00000052, pool=1
[WARN ] d3d8_vertexbuffer.cpp:118 in initialize(): No OSMesa context available for vertex buffer creation
[INFO ] d3d8_device.cpp:1551 in CreateVertexBuffer(): CreateVertexBuffer: length=144, usage=0x00000008, fvf=0x00000152, pool=1
[WARN ] d3d8_vertexbuffer.cpp:118 in initialize(): No OSMesa context available for vertex buffer creation
[INFO ] d3dx_texture.cpp:261 in D3DXCreateTextureFromFileEx(): D3DXCreateTextureFromFileEx: wall01.tga
[INFO ] d3dx_texture.cpp:318 in D3DXCreateTextureFromFileInMemoryEx(): D3DXCreateTextureFromFileInMemoryEx: 1048620 bytes
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becc350, format=21, size=512x512
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becc350, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3dx_texture.cpp:436 in D3DXFilterTexture(): D3DXFilterTexture: SrcLevel=0, Filter=0xffffffff
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becc350, format=21, size=512x512
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becc6f0, format=21, size=256x256
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becc6f0, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becc350, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becc6f0, format=21, size=256x256
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becca90, format=21, size=128x128
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becca90, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becc6f0, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becca90, format=21, size=128x128
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccc10, format=21, size=64x64
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccc10, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becca90, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccc10, format=21, size=64x64
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccd90, format=21, size=32x32
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccd90, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccc10, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccd90, format=21, size=32x32
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccf10, format=21, size=16x16
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccf10, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccd90, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2beccf10, format=21, size=16x16
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd090, format=21, size=8x8
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd090, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2beccf10, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd090, format=21, size=8x8
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd210, format=21, size=4x4
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd210, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd090, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd210, format=21, size=4x4
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd390, format=21, size=2x2
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd390, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd210, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd390, format=21, size=2x2
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2becd510, format=21, size=1x1
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd510, format=21, lock_flags=0x0
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x0, D3DLOCK_READONLY=0x10, texture_=0
[INFO ] d3d8_surface.cpp:461 in UnlockRect(): Using parent texture GL object: 2
[INFO ] d3d8_surface.cpp:465 in UnlockRect(): Uploading texture data to GL texture 2
[INFO ] d3d8_surface.cpp:471 in UnlockRect(): Texture format conversion: D3D format=21 -> GL internal=6408, format=32993, type=5121
[INFO ] d3d8_surface.cpp:478 in UnlockRect(): Full surface update: format_=21, GL format=32993
[INFO ] d3d8_surface.cpp:449 in UnlockRect(): UnlockRect called on surface 0x653d2becd390, format=21, lock_flags=0x10
[INFO ] d3d8_surface.cpp:452 in UnlockRect(): UnlockRect: lock_flags_=0x10, D3DLOCK_READONLY=0x10, texture_=0
[DX8GL] Direct3DCreate8 called with SDK version 0x00000078 (expected 0x00000078)
[DX8GL] Direct3DCreate8_CPP returned C++ interface at 0x653d2a29fb10
[DX8GL] Returning C++ interface directly (compiled with DX8GL_USE_CPP_INTERFACES)
Successfully loaded floor texture
Direct3D initialized successfully
=== render_cube called, frame 0 ===
[INFO ] d3d8_device.cpp:618 in Clear(): Clear: count=0, flags=0x00000003, color=0xff404080, z=1.00, stencil=0
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: WORLD matrix: [1.00,0.00,0.00,0.00] [0.00,1.00,0.00,0.00] [0.00,0.00,1.00,0.00] [0.00,0.00,0.00,1.00]
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: VIEW matrix: [-0.71,-0.45,-0.55,0.00] [0.00,0.77,-0.64,0.00] [0.71,-0.45,-0.55,0.00] [-0.00,0.39,5.18,1.00]
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: PROJECTION matrix: [2.41,0.00,0.00,0.00] [0.00,2.41,0.00,0.00] [0.00,0.00,1.05,1.00] [0.00,0.00,-0.53,0.00]
[INFO ] d3d8_device.cpp:1155 in SetVertexShader(): SetVertexShader: handle=0x00000152
[INFO ] vertex_shader_manager.cpp:230 in set_vertex_shader(): Disabled vertex shader
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: WORLD matrix: [0.40,0.00,0.00,0.00] [0.00,0.40,0.00,0.00] [0.00,0.00,0.40,0.00] [0.00,0.00,0.00,1.00]
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: VIEW matrix: [-0.71,-0.45,-0.55,0.00] [0.00,0.77,-0.64,0.00] [0.71,-0.45,-0.55,0.00] [-0.00,0.39,5.18,1.00]
[INFO ] d3d8_device.cpp:925 in SetTransform(): SetTransform: PROJECTION matrix: [2.41,0.00,0.00,0.00] [0.00,2.41,0.00,0.00] [0.00,0.00,1.05,1.00] [0.00,0.00,-0.53,0.00]

=== Matrix Debug Frame 0 ===
Rotation: 0 radians
Camera at (1.5, 1.2, 1.5) looking at origin, cube scaled to 40%
Perspective projection: 45 degree FOV, near=0.5, far=10.0
Projection matrix:
  [2.41, 0.00, 0.00, 0.00]
  [0.00, 2.41, 0.00, 0.00]
  [0.00, 0.00, 1.05, 1.00]
  [0.00, 0.00, -0.53, 0.00]
[INFO ] d3d8_device.cpp:1155 in SetVertexShader(): SetVertexShader: handle=0x00000052
[INFO ] vertex_shader_manager.cpp:230 in set_vertex_shader(): Disabled vertex shader
Drawing cube: 24 vertices, 12 triangles
[INFO ] d3d8_device.cpp:1207 in flush_command_buffer(): Flushing command buffer: 33 commands, 1464 bytes
[INFO ] d3d8_device.cpp:1234 in wait_for_pending_commands(): Waiting for render thread to complete all pending commands
Saved command buffer to dx8gl_commands_frame_0000.txt
[INFO ] fixed_function_shader.cpp:57 in FixedFunctionShader(): Created fixed function shader generator
[INFO ] state_manager.cpp:198 in set_render_state(): Setting D3DRS_ZENABLE to 1
[INFO ] state_manager.cpp:220 in set_render_state(): Setting D3DRS_CULLMODE to 3
[INFO ] command_buffer.cpp:490 in execute(): EXECUTE: SET_TEXTURE stage=0 texture=0x653d2a29da20
[INFO ] state_manager.cpp:519 in apply_render_states(): Applying render states, z_enable=1
[INFO ] state_manager.cpp:536 in apply_render_states(): GL_DEPTH_TEST already in correct state: enabled
[INFO ] state_manager.cpp:583 in apply_render_states(): GL_CULL_FACE already in correct state: enabled
[INFO ] command_buffer.cpp:830 in execute(): DrawIndexedPrimitive Shader check: vertex_shader_mgr=0x653d2bd796f0, using_vertex_shader=0, shader_program_mgr=0x653d2bd762e0
[INFO ] command_buffer.cpp:845 in execute(): Using fixed function pipeline for DrawIndexedPrimitive
[INFO ] command_buffer.cpp:848 in execute(): EXECUTE: DrawIndexedPrimitive texture_enabled[0]=true
[INFO ] fixed_function_shader.cpp:82 in get_program(): Generated vertex shader for FVF 0x152:
#version 330 core

in vec3 a_position;  // XYZ - world coordinates
in vec3 a_normal;
in vec4 a_color;
in vec2 a_texcoord0;

uniform mat4 u_world;
uniform mat4 u_view;
uniform mat4 u_projection;
uniform mat4 u_worldViewProj;
uniform mat3 u_normalMatrix;

out vec4 v_color;
out vec2 v_texcoord0;
out vec3 v_normal;
out vec3 v_worldPos;

void main() {
    vec4 worldPos = u_world * vec4(a_position, 1.0);
    gl_Position = u_worldViewProj * vec4(a_position, 1.0);
    v_color = a_color;
    v_texcoord0 = a_texcoord0;
    v_normal = normalize(u_normalMatrix * a_normal);
    v_worldPos = worldPos.xyz;
}

[INFO ] fixed_function_shader.cpp:83 in get_program(): Generated fragment shader:
#version 330 core

in vec4 v_color;
in vec2 v_texcoord0;
in vec3 v_normal;
in vec3 v_worldPos;

uniform vec4 u_materialAmbient;
uniform vec4 u_materialDiffuse;
uniform vec4 u_materialSpecular;
uniform vec4 u_materialEmissive;
uniform float u_materialPower;
uniform vec4 u_ambientLight;
uniform vec3 u_lightPos0;
uniform vec4 u_lightDiffuse0;
uniform vec3 u_lightPos1;
uniform vec4 u_lightDiffuse1;
uniform sampler2D u_texture0;
uniform vec4 u_textureFactor;

out vec4 fragColor;

void main() {
    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);
    color = v_color.bgra;
    vec3 normal = normalize(v_normal);
    vec3 lightColor = u_ambientLight.rgb * u_materialAmbient.rgb;
    {
        vec3 lightDir = normalize(u_lightPos0 - v_worldPos);
        float diff = max(dot(normal, lightDir), 0.0);
        lightColor += diff * u_lightDiffuse0.rgb * u_materialDiffuse.rgb;
    }
    {
        vec3 lightDir = normalize(u_lightPos1 - v_worldPos);
        float diff = max(dot(normal, lightDir), 0.0);
        lightColor += diff * u_lightDiffuse1.rgb * u_materialDiffuse.rgb;
    }
    color.rgb *= lightColor;
    vec2 modifiedTexCoord[1];
    modifiedTexCoord[0] = v_texcoord0;
    color *= texture(u_texture0, modifiedTexCoord[0]);
    fragColor = color;
}

[INFO ] fixed_function_shader.cpp:94 in get_program(): Saved vertex shader to dx8gl_shader_00.vert
[INFO ] fixed_function_shader.cpp:102 in get_program(): Saved fragment shader to dx8gl_shader_00.frag
[INFO ] fixed_function_shader.cpp:424 in compile_shader(): compile_shader called with type=0x8b31
[INFO ] fixed_function_shader.cpp:424 in compile_shader(): compile_shader called with type=0x8b30
[INFO ] fixed_function_shader.cpp:504 in link_program(): Binding attributes: position=0, normal=1, color=2, texcoord0=3, texcoord1=4
[INFO ] fixed_function_shader.cpp:133 in get_program(): Created fixed function shader program 3 for state hash 0x111111113b513515
[INFO ] command_buffer.cpp:868 in execute(): Got uniform locations for program 3
[INFO ] command_buffer.cpp:887 in execute(): worldViewProj uniform location: 1
[INFO ] command_buffer.cpp:892 in execute(): Setting worldViewProj matrix: [-1.71,-1.09,-0.57,-0.55] [0.00,1.86,-0.67,-0.64] [1.71,-1.09,-0.57,-0.55] [0.00,0.93,4.93,5.18]
[INFO ] command_buffer.cpp:1009 in execute(): Enabled position attribute at location 0, stride 36
[INFO ] command_buffer.cpp:1022 in execute(): Enabled color attribute at location 2, offset 24, stride 36
[INFO ] command_buffer.cpp:1029 in execute(): Enabled texcoord0 attribute at location 3, offset 28, stride 36
[INFO ] command_buffer.cpp:1064 in execute(): DrawElements: mode=GL_TRIANGLES, count=6, type=GL_UNSIGNED_SHORT, offset=0
[INFO ] command_buffer.cpp:1073 in execute():   Vertex buffer bound: 2
[INFO ] command_buffer.cpp:1078 in execute():   Index buffer bound: 3
[INFO ] command_buffer.cpp:1084 in execute(): Calling glDrawElements: mode=GL_TRIANGLES, count=6, type=GL_UNSIGNED_SHORT, offset=0
[INFO ] command_buffer.cpp:1103 in execute(): Draw successful - viewport: 0,0 800x600
[INFO ] command_buffer.cpp:1109 in execute(): Current shader program: 3
[INFO ] command_buffer.cpp:1114 in execute(): Framebuffer binding: 0
[INFO ] command_buffer.cpp:1119 in execute(): Depth test enabled: yes
[INFO ] command_buffer.cpp:1124 in execute(): Depth write mask: yes
[INFO ] command_buffer.cpp:490 in execute(): EXECUTE: SET_TEXTURE stage=0 texture=(nil)
[INFO ] state_manager.cpp:515 in apply_render_states(): Render states not dirty, skipping apply
[INFO ] command_buffer.cpp:830 in execute(): DrawIndexedPrimitive Shader check: vertex_shader_mgr=0x653d2bd796f0, using_vertex_shader=0, shader_program_mgr=0x653d2bd762e0
[INFO ] command_buffer.cpp:845 in execute(): Using fixed function pipeline for DrawIndexedPrimitive
[INFO ] command_buffer.cpp:848 in execute(): EXECUTE: DrawIndexedPrimitive texture_enabled[0]=false
[INFO ] fixed_function_shader.cpp:82 in get_program(): Generated vertex shader for FVF 0x52:
#version 330 core

in vec3 a_position;  // XYZ - world coordinates
in vec3 a_normal;
in vec4 a_color;

uniform mat4 u_world;
uniform mat4 u_view;
uniform mat4 u_projection;
uniform mat4 u_worldViewProj;
uniform mat3 u_normalMatrix;

out vec4 v_color;
out vec3 v_normal;
out vec3 v_worldPos;

void main() {
    vec4 worldPos = u_world * vec4(a_position, 1.0);
    gl_Position = u_worldViewProj * vec4(a_position, 1.0);
    v_color = a_color;
    v_normal = normalize(u_normalMatrix * a_normal);
    v_worldPos = worldPos.xyz;
}

[INFO ] fixed_function_shader.cpp:83 in get_program(): Generated fragment shader:
#version 330 core

in vec4 v_color;
in vec3 v_normal;
in vec3 v_worldPos;

uniform vec4 u_materialAmbient;
uniform vec4 u_materialDiffuse;
uniform vec4 u_materialSpecular;
uniform vec4 u_materialEmissive;
uniform float u_materialPower;
uniform vec4 u_ambientLight;
uniform vec3 u_lightPos0;
uniform vec4 u_lightDiffuse0;
uniform vec3 u_lightPos1;
uniform vec4 u_lightDiffuse1;

out vec4 fragColor;

void main() {
    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);
    color = v_color.bgra;
    vec3 normal = normalize(v_normal);
    vec3 lightColor = u_ambientLight.rgb * u_materialAmbient.rgb;
    {
        vec3 lightDir = normalize(u_lightPos0 - v_worldPos);
        float diff = max(dot(normal, lightDir), 0.0);
        lightColor += diff * u_lightDiffuse0.rgb * u_materialDiffuse.rgb;
    }
    {
        vec3 lightDir = normalize(u_lightPos1 - v_worldPos);
        float diff = max(dot(normal, lightDir), 0.0);
        lightColor += diff * u_lightDiffuse1.rgb * u_materialDiffuse.rgb;
    }
    color.rgb *= lightColor;
    fragColor = color;
}

[INFO ] fixed_function_shader.cpp:94 in get_program(): Saved vertex shader to dx8gl_shader_01.vert
[INFO ] fixed_function_shader.cpp:102 in get_program(): Saved fragment shader to dx8gl_shader_01.frag
[INFO ] fixed_function_shader.cpp:424 in compile_shader(): compile_shader called with type=0x8b31
[INFO ] fixed_function_shader.cpp:424 in compile_shader(): compile_shader called with type=0x8b30
[INFO ] fixed_function_shader.cpp:504 in link_program(): Binding attributes: position=0, normal=1, color=2, texcoord0=3, texcoord1=4
[INFO ] fixed_function_shader.cpp:133 in get_program(): Created fixed function shader program 6 for state hash 0x111111111b511510
[INFO ] command_buffer.cpp:868 in execute(): Got uniform locations for program 6
[INFO ] command_buffer.cpp:887 in execute(): worldViewProj uniform location: 1
[INFO ] command_buffer.cpp:892 in execute(): Setting worldViewProj matrix: [-0.68,-0.43,-0.23,-0.22] [0.00,0.74,-0.27,-0.25] [0.68,-0.43,-0.23,-0.22] [0.00,0.93,4.93,5.18]
[INFO ] command_buffer.cpp:1009 in execute(): Enabled position attribute at location 0, stride 28
[INFO ] command_buffer.cpp:1022 in execute(): Enabled color attribute at location 2, offset 24, stride 28
[INFO ] command_buffer.cpp:1064 in execute(): DrawElements: mode=GL_TRIANGLES, count=36, type=GL_UNSIGNED_SHORT, offset=0
[INFO ] command_buffer.cpp:1073 in execute():   Vertex buffer bound: 1
[INFO ] command_buffer.cpp:1078 in execute():   Index buffer bound: 4
[INFO ] command_buffer.cpp:1084 in execute(): Calling glDrawElements: mode=GL_TRIANGLES, count=36, type=GL_UNSIGNED_SHORT, offset=0
[INFO ] command_buffer.cpp:1103 in execute(): Draw successful - viewport: 0,0 800x600
[INFO ] command_buffer.cpp:1109 in execute(): Current shader program: 6
[INFO ] command_buffer.cpp:1114 in execute(): Framebuffer binding: 0
[INFO ] command_buffer.cpp:1119 in execute(): Depth test enabled: yes
[INFO ] command_buffer.cpp:1124 in execute(): Depth write mask: yes
[INFO ] d3d8_device.cpp:1236 in wait_for_pending_commands(): All pending commands completed
[INFO ] d3d8_surface.cpp:351 in LockRect(): LockRect called on surface 0x653d2bd8ab70, format=22, size=400x400
timeout: the monitored command dumped core
