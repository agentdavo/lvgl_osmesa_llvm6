Initializing Direct3D...
init_d3d() called
Calling dx8gl_init...
[INFO ] dx8gl.cpp:94 in dx8gl_init(): dx8gl initialized
dx8gl_init succeeded
[INFO ] d3d8_interface.cpp:43 in initialize(): Initializing Direct3D8 interface
[INFO ] d3d8_interface.cpp:45 in initialize(): Using OSMesa-only software rendering (no EGL complexity)
[INFO ] d3d8_interface.cpp:516 in enumerate_adapters(): Enumerating adapters for OSMesa mode
[INFO ] d3d8_interface.cpp:517 in enumerate_adapters():   - OSMesa provides software rendering via llvmpipe
[INFO ] d3d8_interface.cpp:518 in enumerate_adapters():   - Simulating 1 adapter (no actual hardware enumeration)
[INFO ] d3d8_interface.cpp:519 in enumerate_adapters():   - Adapter 0: OSMesa Software Renderer
[INFO ] d3d8_interface.cpp:520 in enumerate_adapters():   - Vendor: Mesa/llvmpipe (fake ATI VendorId 0x1002)
[INFO ] d3d8_interface.cpp:521 in enumerate_adapters():   - Device: Software Rasterizer (fake Radeon 7500 DeviceId 0x5159)
[INFO ] d3d8_interface.cpp:527 in enumerate_adapters(): OSMesa adapter enumeration complete - 1 software adapter available
[INFO ] dx8gl.cpp:59 in Direct3DCreate8_CPP(): Created IDirect3D8 interface at 0x5aa875266610
[INFO ] d3d8_interface.cpp:459 in CreateDevice(): CreateDevice() called with parameters:
[INFO ] d3d8_interface.cpp:460 in CreateDevice():   Adapter: 0 (OSMesa software adapter)
[INFO ] d3d8_interface.cpp:461 in CreateDevice():   DeviceType: HAL
[INFO ] d3d8_interface.cpp:462 in CreateDevice():   Focus Window: (nil)
[INFO ] d3d8_interface.cpp:463 in CreateDevice():   Behavior Flags: 0x00000020
[INFO ] d3d8_interface.cpp:465 in CreateDevice():     - SOFTWARE_VERTEXPROCESSING
[INFO ] d3d8_interface.cpp:479 in CreateDevice():   Present Parameters:
[INFO ] d3d8_interface.cpp:480 in CreateDevice():     BackBuffer Size: 640x480
[INFO ] d3d8_interface.cpp:483 in CreateDevice():     BackBuffer Format: 0x00000016
[INFO ] d3d8_interface.cpp:484 in CreateDevice():     BackBuffer Count: 0
[INFO ] d3d8_interface.cpp:485 in CreateDevice():     MultiSample Type: 0
[INFO ] d3d8_interface.cpp:486 in CreateDevice():     SwapEffect: 1
[INFO ] d3d8_interface.cpp:487 in CreateDevice():     Windowed: Yes
[INFO ] d3d8_interface.cpp:488 in CreateDevice():     EnableAutoDepthStencil: Yes
[INFO ] d3d8_interface.cpp:490 in CreateDevice():     AutoDepthStencilFormat: 0x0000004B
[INFO ] d3d8_interface.cpp:492 in CreateDevice():     FullScreen_RefreshRateInHz: 0
[INFO ] d3d8_interface.cpp:493 in CreateDevice():     FullScreen_PresentationInterval: 0x00000000
[INFO ] d3d8_interface.cpp:496 in CreateDevice(): Creating Direct3DDevice8 instance...
[INFO ] thread_pool.cpp:24 in ThreadPool(): Creating thread pool with 8 threads
[INFO ] d3d8_device.cpp:73 in Direct3DDevice8(): Direct3DDevice8 created: adapter=0, type=1, flags=0x00000020
[INFO ] d3d8_interface.cpp:499 in CreateDevice(): Direct3DDevice8 instance created at 0x5aa87553a6f0
[INFO ] d3d8_interface.cpp:501 in CreateDevice(): Initializing Direct3DDevice8...
[INFO ] d3d8_device.cpp:131 in initialize(): Initializing Direct3DDevice8
[INFO ] d3d8_device.cpp:143 in initialize(): Using OSMesa for software rendering
[INFO ] osmesa_context.cpp:31 in initialize(): Initializing OSMesa context 640x480
[INFO ] osmesa_context.cpp:34 in initialize(): Attempting to create OpenGL 4.5 Core context with OSMesaCreateContextAttribs
[INFO ] osmesa_context.cpp:112 in initialize(): OSMesa version: 11.2.0
[INFO ] osmesa_context.cpp:113 in initialize(): OSMesa context: 640x480 (max: 16384x16384)
[INFO ] osmesa_context.cpp:114 in initialize(): Actual OpenGL context: version 4.5, profile mask=0x1
[INFO ] osmesa_context.cpp:122 in initialize(): === OSMesa OpenGL Capabilities ===
[INFO ] osmesa_context.cpp:123 in initialize(): OpenGL vendor: Mesa
[INFO ] osmesa_context.cpp:124 in initialize(): OpenGL renderer: llvmpipe (LLVM 20.1.8, 256 bits)
[INFO ] osmesa_context.cpp:125 in initialize(): OpenGL version: 4.5 (Core Profile) Mesa 25.0.4 (git-d0f8720019)
[INFO ] osmesa_context.cpp:126 in initialize(): GLSL version: 4.50
[INFO ] osmesa_context.cpp:143 in initialize(): === OpenGL Limits ===
[INFO ] osmesa_context.cpp:144 in initialize(): Max texture size: 16384
[INFO ] osmesa_context.cpp:145 in initialize(): Max texture units: 32
[INFO ] osmesa_context.cpp:146 in initialize(): Max combined texture units: 192
[INFO ] osmesa_context.cpp:147 in initialize(): Max vertex attributes: 16
[INFO ] osmesa_context.cpp:148 in initialize(): Max vertex uniforms: 4096
[INFO ] osmesa_context.cpp:149 in initialize(): Max fragment uniforms: 4096
[INFO ] osmesa_context.cpp:150 in initialize(): Max varying vectors: 32
[INFO ] osmesa_context.cpp:151 in initialize(): Max renderbuffer size: 16384
[INFO ] osmesa_context.cpp:152 in initialize(): Max viewport: 16384x16384
[INFO ] osmesa_context.cpp:156 in initialize(): === Enabling OpenGL Debug Output ===
[INFO ] osmesa_context.cpp:203 in initialize(): OpenGL debug output enabled with filtering
[INFO ] osmesa_context.cpp:209 in initialize(): === OpenGL Extensions ===
[INFO ] osmesa_context.cpp:214 in initialize(): Extension count: 227
[INFO ] osmesa_context.cpp:234 in initialize(): === Key Extensions for DirectX 8 Compatibility ===
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_framebuffer_object
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_vertex_buffer_object
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_pixel_buffer_object
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_texture_non_power_of_two
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_vertex_shader
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_fragment_shader
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_ARB_get_program_binary
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_EXT_framebuffer_object
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_EXT_blend_equation_separate
[INFO ] osmesa_context.cpp:244 in initialize(): ✗ GL_EXT_blend_func_separate
[INFO ] osmesa_context.cpp:244 in initialize(): ✓ GL_EXT_texture_compression_s3tc
[INFO ] osmesa_context.cpp:248 in initialize(): === Sample Extensions (first 20) ===
[INFO ] osmesa_context.cpp:253 in initialize():   GL_3DFX_texture_compression_FXT1
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_conservative_depth
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_draw_buffers_blend
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_gpu_shader_int64
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_multi_draw_indirect
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_pinned_memory
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_query_buffer_object
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_seamless_cubemap_per_texture
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_shader_stencil_export
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_shader_trinary_minmax
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_texture_texture4
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_vertex_shader_layer
[INFO ] osmesa_context.cpp:253 in initialize():   GL_AMD_vertex_shader_viewport_index
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ANGLE_texture_compression_dxt3
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ANGLE_texture_compression_dxt5
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ARB_ES2_compatibility
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ARB_ES3_1_compatibility
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ARB_ES3_2_compatibility
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ARB_ES3_compatibility
[INFO ] osmesa_context.cpp:253 in initialize():   GL_ARB_arrays_of_arrays
[INFO ] osmesa_context.cpp:257 in initialize():   ... and 207 more extensions
[INFO ] osmesa_context.cpp:263 in initialize(): === OSMesa Context Analysis Complete ===
[INFO ] osmesa_context.cpp:266 in initialize(): Initializing OpenGL function pointers via OSMesaGetProcAddress
[INFO ] osmesa_gl_loader.cpp:58 in InitializeOSMesaGL(): Initializing OSMesa GL function pointers
