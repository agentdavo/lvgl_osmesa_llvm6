#!/bin/bash
# Script to run dx8gl sample tests

echo "=== Running dx8gl Sample Tests ==="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Change to build directory
SCRIPT_DIR="$(dirname "$0")"
BUILD_DIR="$SCRIPT_DIR/../../../build"
if [ ! -d "$BUILD_DIR" ]; then
    echo -e "${RED}Build directory not found: $BUILD_DIR${NC}"
    exit 1
fi

# Make sure samples are built
echo "Building dx8gl samples..."
cmake --build "$BUILD_DIR" --target dx8gl_clear_test dx8gl_triangle dx8gl_textured_cube \
    dx8gl_lighting_test dx8gl_multitexture_test dx8gl_alpha_blend_test \
    dx8gl_state_changes_test dx8gl_vertex_shader_test dx8gl_shader_assembly_test \
    dx8gl_complex_vertex_shader_test dx8gl_shader_translation_test \
    dx8gl_pixel_shader_test dx8gl_shader_modifiers_test \
    dx8gl_bytecode_assembler_test dx8gl_constant_batching_test \
    dx8gl_test_shader_features -j4

if [ $? -ne 0 ]; then
    echo -e "${RED}Failed to build samples${NC}"
    exit 1
fi

# Run tests using ctest
echo -e "\n${YELLOW}Running tests with CTest...${NC}"
cd "$BUILD_DIR/lib/dx8gl/samples" || exit 1

# Run all tests with verbose output
ctest --output-on-failure --timeout 30

TEST_RESULT=$?

# Summary
echo -e "\n=== Test Summary ==="
if [ $TEST_RESULT -eq 0 ]; then
    echo -e "${GREEN}All tests PASSED!${NC}"
    
    # Check for generated PPM files
    echo -e "\nChecking for generated output files..."
    PPM_COUNT=$(find . -name "*.ppm" -type f 2>/dev/null | wc -l)
    echo "Found $PPM_COUNT PPM image files generated by tests"
    
    if [ $PPM_COUNT -gt 0 ]; then
        echo "Sample outputs:"
        find . -name "*.ppm" -type f 2>/dev/null | head -5
    fi
else
    echo -e "${RED}Some tests FAILED!${NC}"
    echo "Run 'ctest --rerun-failed --output-on-failure' to see detailed errors"
fi

# Run shader feature tests separately for detailed output
echo -e "\n${YELLOW}Running shader feature tests...${NC}"
if [ -f "./dx8gl_test_shader_features" ]; then
    LD_LIBRARY_PATH="../:$LD_LIBRARY_PATH" ./dx8gl_test_shader_features
else
    echo -e "${RED}Shader feature test not found${NC}"
fi

exit $TEST_RESULT